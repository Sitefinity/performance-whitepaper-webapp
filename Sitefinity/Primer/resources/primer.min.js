function startTimer() { $primer.timer.interval = setInterval(function () { parsePreLoadItems(); viewModel.primer.set("runs", viewModel.primer.get("runs") + 1) }, viewModel.primer.timer.get("ms")) } function parsePreLoadItems() { var e = viewModel.primer.get("objects"); if (e.length >= 1) { for (var t = 0; t < e.length; t++) { if (e[0].toLowerCase() === "all") { viewModel.engage() } if (e[t].toLowerCase() === "sitemap") { viewModel.primeSitemap() } } } for (var n = 0; n < viewModel.sections.length; n++) { for (var r = 0; r < $primer.objects.length; r++) { if (viewModel.sections[n].name.toLowerCase() === e[r]) { parseSections(viewModel.sections[n]) } } } } function parseSections(e) { for (var t = 0; t < e.urls.length; t++) { if (e.urls[t]) { callback(e.urls[t]) } } } function siteMapCallback(e) { $.ajax({ url: e.url, timeout: 6e4, beforeSend: function (t) { e.set("status", 2); var n = viewModel.primer.get("sitemapAjax"); viewModel.primer.set("sitemapAjax", n + 1) }, complete: function (t) { e.set("status", 1); var n = viewModel.primer.get("sitemapAjax"); viewModel.primer.set("sitemapAjax", n - 1) } }) } function callback(e) { $.ajax({ url: e.url, timeout: 3e4, beforeSend: function (t) { e.set("status", 2); var n = viewModel.primer.get("activeAjax"); viewModel.primer.set("activeAjax", n + 1) }, complete: function (t) { e.set("status", 1); var n = viewModel.primer.get("activeAjax"); viewModel.primer.set("activeAjax", n - 1) } }) } function getPageData() { var e = []; e.push(new Page("Pages", [{ name: "/Pages", url: "/Sitefinity/Pages", status: 0 }, { name: "PagesService.svc", url: "/Sitefinity/Services/Pages/PagesService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Pages.Model.PageNode&hierarchyMode=true&provider=", status: 0 }, { name: "WorkflowService.svc", url: "/Sitefinity/Services/Workflow/WorkflowService.svc/00000000-0000-0000-0000-000000000000/?itemType=Telerik.Sitefinity.Pages.Model.PageNode&unv_tstmp_prm=1339824140506", status: 0 }, { name: "ZoneEditorService.svc", url: "/Sitefinity/Services/Pages/ZoneEditorService.svc/Control/", status: 0 }, { name: "PageCreateDialog", url: "/Sitefinity/Dialog/ContentViewInsertDialog?ControlDefinitionName=FrontendPages&ViewName=FrontendPagesCreate&SuppressBackToButtonLabelModify=true&language=en", status: 0 }])); e.push(new Page("Templates", [{ name: "/Design/PageTemplates", url: "/Sitefinity/Design/PageTemplates" }, { name: "ControlTemplates", url: "/Sitefinity/Design/ControlTemplates" }])); e.push(new Page("Blogs", [{ name: "/Content/Blogs", url: "/Sitefinity/Content/Blogs", status: 0 }, { name: "BlogService.svc", url: "/Sitefinity/Services/Content/BlogService.svc/?managerType=&providerName=OpenAccessDataProvider&itemType=Telerik.Sitefinity.Blogs.Model.Blog&provider=OpenAccessDataProvider&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }, { name: "BlogPostService.svc", url: "/Sitefinity/Services/Content/BlogPostService.svc/parent/00000000-0000-0000-0000-000000000000/?managerType=&providerName=OpenAccessDataProvider&itemType=Telerik.Sitefinity.Blogs.Model.BlogPost&provider=OpenAccessDataProvider&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }])); e.push(new Page("Forms", [{ name: "/Content/Forms", url: "/Sitefinity/Content/Forms", status: 0 }, { name: "FormsService.svc", url: "/Sitefinity/Services/Forms/FormsService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Forms.Model.FormDescription&provider=&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }])); e.push(new Page("Lists", [{ name: "/Content/Lists", url: "/Sitefinity/Content/Lists", status: 0 }, { name: "ListsService.svc", url: "/Sitefinity/Services/Lists/ListService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Lists.Model.List&provider=&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }, { name: "ListItemService.svc", url: "/Sitefinity/Services/Lists/ListItemService.svc/parent/00000000-0000-0000-0000-000000000000/?managerType=&providerName=OpenAccessDataProvider&itemType=Telerik.Sitefinity.Lists.Model.ListItem&hierarchyMode=true&provider=OpenAccessDataProvider&sortExpression=Ordinal%20ASC", status: 0 }])); e.push(new Page("Events", [{ name: "/Content/Events", url: "/Sitefinity/Content/Events", status: 0 }, { name: "EventService.svc", url: "/Sitefinity/Services/Content/EventService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Events.Model.Event&provider=&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }])); e.push(new Page("News", [{ name: "/Content/News", url: "/Sitefinity/Content/News", status: 0 }, { name: "NewsItemService.svc", url: "/Sitefinity/Services/Content/NewsItemService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.News.Model.NewsItem&provider=&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }])); e.push(new Page("Images", [{ name: "/Content/Images", url: "/Sitefinity/Content/Images", status: 0 }, { name: "ImageService.svc", url: "/Sitefinity/Services/Content/ImageService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Libraries.Model.Image&provider=&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }, { name: "AlbumService.svc", url: "/Sitefinity/Services/Content/AlbumService.svc/?provider=&itemType=Telerik.Sitefinity.Libraries.Model.Album&take=1", status: 0 }])); e.push(new Page("Documents", [{ name: "/Content/Documents", url: "/Sitefinity/Content/Documents", status: 0 }, { name: "DocumentService.svc", url: "/Sitefinity/Services/Content/DocumentService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Libraries.Model.Document&provider=&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }, { name: "DocumentLibraryService.svc", url: "/Sitefinity/Services/Content/DocumentLibraryService.svc/?providerName=&itemType=Telerik.Sitefinity.Libraries.Model.DocumentLibrary&take=1", status: 0 }])); e.push(new Page("Content blocks", [{ name: "/Content/Content blocks", url: "/Sitefinity/Content/Content blocks", status: 0 }, { name: "ContentItemService.svc", url: "/Sitefinity/Services/Content/ContentItemService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.GenericContent.Model.ContentItem&provider=&sortExpression=LastModified%20DESC&skip=0&take=1", status: 0 }, { name: "ContentBlockPage.svc", url: "/Sitefinity/Services/Content/ContentBlockPage.svc/pages/?take=1", status: 0 }])); e.push(new Page("Settings", [{ name: "Settings", url: "/Sitefinity/Administration/Settings", status: 0 }, { name: "Advanced", url: "/Sitefinity/Administration/Settings/Advanced", status: 0 }])); e.push(new Page("Ecommerce", [{ name: "Products", url: "/Sitefinity/ecommerce/products", status: 0 }, { name: "ProductService.svc", url: "/Sitefinity/Services/Ecommerce/Catalog/ProductService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Catalog.Model.Product&provider=&sortExpression=Title%20ASC&skip=0&take=1", status: 0 }, { name: "ProductAttribute.svc", url: "/Sitefinity/Services/Ecommerce/Catalog/ProductAttribute.svc/?managerType=&providerName=OpenAccessDataProvider&itemType=Telerik.Sitefinity.Ecommerce.Catalog.Model.ProductAttribute&provider=&sortExpression=Title%20ASC&skip=0&take=1", status: 0 }, { name: "ProductAttributeValue.svc", url: "/Sitefinity/Services/Ecommerce/Catalog/ProductAttributeValue.svc/parent/00000000-0000-0000-0000-000000000000/?managerType=&providerName=OpenAccessDataProvider&itemType=Telerik.Sitefinity.Ecommerce.Catalog.Model.ProductAttributeValue&hierarchyMode=true&provider=&sortExpression=Ordinal%20ASC", status: 0 }, { name: "ProductVariation.svc", url: "/Sitefinity/Services/Ecommerce/Catalog/ProductVariation.svc/parent/00000000-0000-0000-0000-000000000000/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Catalog.Model.ProductVariation&provider=&sortExpression=LastModified%20ASC&skip=0&take=1", status: 0 }, { name: "ProductTypeService.svc", url: "/Sitefinity/Services/Ecommerce/Catalog/ProductTypeService.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Catalog.Model.ProductType&provider=&sortExpression=Title%20ASC&skip=0&take=1", status: 0 }, { name: "ShippingMethod.svc", url: "/Sitefinity/Services/Ecommerce/Shipping/ShippingMethod.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Shipping.Model.ShippingMethod&provider=&sortExpression=Title%20ASC&skip=0&take=1", status: 0 }, { name: "PaymentMethod.svc", url: "/Sitefinity/Services/Ecommerce/Order/PaymentMethod.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Orders.Model.PaymentMethod&provider=&sortExpression=Title%20ASC&skip=0&take=1", status: 0 }, { name: "Tax.svc", url: "/Sitefinity/Services/Ecommerce/Order/Tax.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Orders.Model.Tax&provider=&sortExpression=Title%20ASC&skip=0&take=1", status: 0 }, { name: "TaxClass.svc", url: "/Sitefinity/Services/Ecommerce/Order/TaxClass.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Orders.Model.TaxClass&provider=&sortExpression=Title%20ASC&skip=0&take=1", status: 0 }, { name: "Customer.svc", url: "/Sitefinity/Services/Ecommerce/Order/Customer.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Orders.Model.Customer&provider=&sortExpression=CustomerFirstName%20ASC&skip=0&take=1", status: 0 }, { name: "Order.svc", url: "/Sitefinity/Services/Ecommerce/Order/Order.svc/?managerType=&providerName=&itemType=Telerik.Sitefinity.Ecommerce.Orders.Model.Order&provider=&sortExpression=OrderNumber%20DESC&skip=0&take=1", status: 0 }])); return e } function Page(e, t) { this.name = e; this.urls = t; this.autoLoad = true } var viewModel = null; var sitemapInterval = null; $(document).ready(function () { viewModel = kendo.observable({ primer: { objects: [], pages: [], timer: {}, queue: [], interval: null, sitemapInterval: null, runs: 1, activeAjax: 0, sitemapAjax: 0, parsingSitemap: false, maxCallBackCount: 5 }, host: window.location.hostname, sections: getPageData(), engage: function () { this.primeSitemap(); for (var e = 0; e < this.sections.length; e++) { parseSections(this.sections[e]) } }, engageSingle: function (e) { parseSections(e.data) }, toggleTimer: function (e) { var t = this.primer.timer.get("enabled"); if (t) { this.primer.timer.set("enabled", false); clearInterval($primer.timer.interval) } else { this.primer.timer.set("enabled", true); startTimer() } }, buttonText: function (e) { var t = this.primer.timer.get("enabled"); return t ? "Stop Timer" : "Start Timer" }, showOptions: function () { $("#timer-details").toggleClass("open") }, getOptionsUrl: function (e) { return "/Sitefinity/Primer/?prime=pages&reloadevery=" + this.primer.timer.get("ms") + "&timerenabled=true" }, getUnParsedSiteMapCount: function (e) { var t = 0; var n = viewModel.primer.get("pages"); for (var r = 0; r < n.length; r++) { if (n[r].status === 0) { t++ } } return t }, primeSitemap: function (e) { console.log("About to prime the sitemap"); if (viewModel.primer.get("parsingSitemap") === false) { viewModel.primer.set("parsingSitemap", true); console.log("Starting..."); sitemapInterval = setInterval(function () { console.log("Interval Tick"); var e = viewModel.primer.get("sitemapAjax"); var t = viewModel.getUnParsedSiteMapCount(); var n = viewModel.primer.get("pages"); if (t > 0) { if (e <= 5) { for (var r = 0; r < n.length; r++) { if (n[r].status === 0) { siteMapCallback(n[r]); break } } } } else { console.log("Done, clearning interval"); clearInterval(sitemapInterval); viewModel.primer.set("parsingSitemap", false); for (var i = 0; i < n.length; i++) { n[i].set("status", 0) } } }, 50) } else { console.log("skipping this round, its already in callback mode") } } }); kendo.bind($("body"), viewModel); $("body").removeAttr("style"); viewModel.primer.set("objects", $primer.objects); viewModel.primer.set("timer", $primer.timer); viewModel.primer.set("pages", $primer.pages); var e = $("#section-wrapper")[0]; var t; imagesLoaded(e, function () { t = new Masonry(e, { gutter: 20, columnWidth: 330, itemSelector: ".section-item" }) }); parsePreLoadItems(); if (viewModel.primer.timer.enabled) { startTimer() } }); kendo.data.binders.css = kendo.data.Binder.extend({ refresh: function () { var e = this.bindings.css.get(); if (e == 1) { $(this.element).removeClass("working").addClass("done") } else { if (e == 2) { $(this.element).removeClass("done").addClass("working") } } } })

//broken { name: "PropertyEditor", url: "/Sitefinity/Dialog/PropertyEditor?Id=00000000-0000-0000-0000-000000000000&MediaType=0&PageId=00000000-0000-0000-0000-000000000000&propertyValueCulture=&ParentPageId=00000000-0000-0000-0000-000000000000&hideSaveAllTranslations=true" }

//broken
//{ name: "ControlPropertyService.svc", url: "/Sitefinity/Services/Pages/ControlPropertyService.svc/batch/00000000-0000-0000-0000-000000000000/?pageId=00000000-0000-0000-0000-000000000000&mediaType=Page&checkLiveVersion=False&upgradePageVersion=False&propertyLocalization=0&isOpenedByBrowseAndEdit=false", status: 0 }